name: Go

on: push
    #branches: ["main"]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    # извлекает репозиторий для дальнейшей работы с ним
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5 # установит Go в систему

    - name: Build
      run: go build -v ./...
  
  # Задание проверяет код на соответствие стилю и отсутствие логических ошибок
  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
      # Используется действие "golangci/golangci-lint-action@v3", которое запускает линтер. Он проверит код на соответствие стилю и отсутствие логических ошибок
      - uses: golangci/golangci-lint-action@v3

  tests:
    # Задание "tests" зависит от задания "build" и будет выполнено после него
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5

    - name: Test
      run: go test -v ./...

    - name: Vet
      run: |
        go vet ./...

  deploy:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN_12_SPRINT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: litvinski/project12-token

      - name: Build and push Docker Inage
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}